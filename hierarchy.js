var hierarchy =
[
    [ "cnl::constant< Value >", "structcnl_1_1constant.html", null ],
    [ "cnl::custom_operator< Operator, Operands >", "structcnl_1_1custom__operator.html", null ],
    [ "cnl::custom_operator< _impl::convert_op, operand< Input, _impl::native_tag >, operand< scaled_integer< ResultRep, power< ResultExponent, ResultRadix > >, neg_inf_rounding_tag > >", "structcnl_1_1custom__operator_3_01__impl_1_1convert__op_00_01operand_3_01Input_00_01__impl_1_1na5568e51aa19644f7db9813056a102c28.html", null ],
    [ "cnl::custom_operator< _impl::convert_op, operand< Input, _impl::native_tag >, operand< scaled_integer< ResultRep, power< ResultExponent, ResultRadix > >, tie_to_pos_inf_rounding_tag > >", "structcnl_1_1custom__operator_3_01__impl_1_1convert__op_00_01operand_3_01Input_00_01__impl_1_1nafaf0828809a226305068ce6baf9b4218.html", null ],
    [ "cnl::elastic_integer< Digits, Narrowest >", "classcnl_1_1elastic__integer.html", null ],
    [ "cnl::fraction< Numerator, Denominator >", "structcnl_1_1fraction.html", null ],
    [ "cnl::from_rep< Number, Rep, Enable >", "structcnl_1_1from__rep.html", null ],
    [ "cnl::from_rep< Number, Rep >", "structcnl_1_1from__rep_3_01Number_00_01Rep_01_4.html", null ],
    [ "cnl::from_rep< scaled_integer< ArchetypeRep, power< Exponent, Radix > >, Rep >", "structcnl_1_1from__rep_3_01scaled__integer_3_01ArchetypeRep_00_01power_3_01Exponent_00_01Radix_01_4_01_4_00_01Rep_01_4.html", null ],
    [ "cnl::native_overflow_tag", "structcnl_1_1native__overflow__tag.html", null ],
    [ "cnl::native_rounding_tag", "structcnl_1_1native__rounding__tag.html", null ],
    [ "cnl::nearest_rounding_tag", "structcnl_1_1nearest__rounding__tag.html", null ],
    [ "cnl::neg_inf_rounding_tag", "structcnl_1_1neg__inf__rounding__tag.html", null ],
    [ "cnl::numbers::signedness< T >", "structcnl_1_1numbers_1_1signedness.html", null ],
    [ "cnl::operand< Rep, Tag >", "classcnl_1_1operand.html", null ],
    [ "cnl::rep_of< T, Enable >", "structcnl_1_1rep__of.html", null ],
    [ "cnl::rep_of< elastic_integer< Digits, Narrowest > >", "structcnl_1_1rep__of_3_01elastic__integer_3_01Digits_00_01Narrowest_01_4_01_4.html", null ],
    [ "cnl::rounding< Number, Enable >", "structcnl_1_1rounding.html", null ],
    [ "cnl::saturated_overflow_tag", "structcnl_1_1saturated__overflow__tag.html", null ],
    [ "cnl::scaled_integer< Rep, Scale >", "classcnl_1_1scaled__integer.html", null ],
    [ "cnl::set_digits< T, Digits, Enable >", "structcnl_1_1set__digits.html", null ],
    [ "cnl::set_rep< T, OutRep, Enable >", "structcnl_1_1set__rep.html", null ],
    [ "cnl::set_rep< elastic_integer< Digits, Narrowest >, Rep >", "structcnl_1_1set__rep_3_01elastic__integer_3_01Digits_00_01Narrowest_01_4_00_01Rep_01_4.html", null ],
    [ "cnl::set_rounding< Number, RoundingTag, Enable >", "structcnl_1_1set__rounding.html", null ],
    [ "cnl::set_tag< T, OutTag, Enable >", "structcnl_1_1set__tag.html", null ],
    [ "cnl::set_tag< elastic_integer< Digits, Narrowest >, elastic_tag< NewDigits, NewNarrowest > >", "structcnl_1_1set__tag_3_01elastic__integer_3_01Digits_00_01Narrowest_01_4_00_01elastic__tag_3_01eca908aaceb0293338c01a8e00181522.html", null ],
    [ "cnl::tag_of< T >", "structcnl_1_1tag__of.html", null ],
    [ "cnl::tag_of< elastic_integer< Digits, Narrowest > >", "structcnl_1_1tag__of_3_01elastic__integer_3_01Digits_00_01Narrowest_01_4_01_4.html", null ],
    [ "cnl::throwing_overflow_tag", "structcnl_1_1throwing__overflow__tag.html", null ],
    [ "cnl::tie_to_pos_inf_rounding_tag", "structcnl_1_1tie__to__pos__inf__rounding__tag.html", null ],
    [ "cnl::to_rep< Number, Enable >", "structcnl_1_1to__rep.html", null ],
    [ "cnl::trapping_overflow_tag", "structcnl_1_1trapping__overflow__tag.html", null ],
    [ "cnl::undefined_overflow_tag", "structcnl_1_1undefined__overflow__tag.html", null ],
    [ "cnl::constant< 0 >", "structcnl_1_1constant.html", null ],
    [ "cnl::constant< Exponent >", "structcnl_1_1constant.html", null ],
    [ "cnl::custom_operator< _impl::convert_op, operand< Input, power< 0, DestRadix > >, operand< Result, power< DestExponent, DestRadix > > >", "structcnl_1_1custom__operator.html", null ],
    [ "cnl::custom_operator< _impl::convert_op, operand< Input, power< 0, Radix > >, operand< Result, nearest_rounding_tag > >", "structcnl_1_1custom__operator.html", [
      [ "cnl::custom_operator< _impl::convert_op, operand< Input, nearest_rounding_tag >, operand< Result, power< 0, Radix > > >", "structcnl_1_1custom__operator_3_01__impl_1_1convert__op_00_01operand_3_01Input_00_01nearest__rou9de6e8f00308290e1cc88c6d11c60cf7.html", null ]
    ] ],
    [ "cnl::custom_operator< _impl::convert_op, operand< Input, power< SrcExponent, SrcRadix > >, operand< Result, power< 0, SrcRadix > > >", "structcnl_1_1custom__operator.html", null ],
    [ "cnl::custom_operator< _impl::convert_op, operand< scaled_integer< Input >, _impl::native_tag >, operand< scaled_integer< ResultRep, ResultScale >, neg_inf_rounding_tag > >", "structcnl_1_1custom__operator.html", null ],
    [ "cnl::custom_operator< _impl::convert_op, operand< scaled_integer< Input >, _impl::native_tag >, operand< scaled_integer< ResultRep, ResultScale >, tie_to_pos_inf_rounding_tag > >", "structcnl_1_1custom__operator.html", null ],
    [ "cnl::custom_operator< _impl::convert_op, operand< Source >, operand< Destination > >", "structcnl_1_1custom__operator.html", null ],
    [ "cnl::custom_operator< _impl::convert_op, operand< Source >, operand< Destination, DestRoundingTag > >", "structcnl_1_1custom__operator.html", null ],
    [ "cnl::custom_operator< Operator, operand< _impl::duplex_integer< Upper, Lower > >, operand< _impl::duplex_integer< Upper, Lower > > >", "structcnl_1_1custom__operator.html", null ],
    [ "cnl::custom_operator< Operator, operand< _impl::native_tag >, operand< _impl::native_tag > >", "structcnl_1_1custom__operator.html", null ],
    [ "cnl::custom_operator< Operator, operand< Lhs >, operand< Rhs > >", "structcnl_1_1custom__operator.html", null ],
    [ "cnl::custom_operator< Operator, operand< Lhs, power< LhsExponent, Radix > >, operand< Rhs > >", "structcnl_1_1custom__operator.html", null ],
    [ "cnl::custom_operator< Operator, operand< Operand, _impl::native_tag > >", "structcnl_1_1custom__operator.html", null ],
    [ "cnl::custom_operator< Operator, operand< Rhs, _impl::native_tag > >", "structcnl_1_1custom__operator.html", null ],
    [ "cnl::from_rep< elastic_integer< Digits, Narrowest >, Rep >", "structcnl_1_1from__rep.html", null ],
    [ "cnl::rep_of< _impl::duplex_integer< UpperUpper, UpperLower > >", "structcnl_1_1rep__of.html", null ],
    [ "cnl::rounding< _impl::rep_of_t< Number > >", "structcnl_1_1rounding.html", null ],
    [ "cnl::rounding< Number >", "structcnl_1_1rounding.html", null ],
    [ "cnl::rounding< Number::rep >", "structcnl_1_1rounding.html", null ],
    [ "cnl::set_digits< Mimic, digits< Source > >", "structcnl_1_1set__digits.html", null ],
    [ "cnl::set_digits< Mimic, Width - numbers::signedness_v< Mimic > >", "structcnl_1_1set__digits.html", null ],
    [ "cnl::set_digits< T, Width - numbers::signedness_v< T > >", "structcnl_1_1set__digits.html", null ],
    [ "cnl::set_digits< wide_integer< Digits, set_signedness_t< Narrowest, IsSigned > >, Width - numbers::signedness_v< wide_integer< Digits, set_signedness_t< Narrowest, IsSigned > > > >", "structcnl_1_1set__digits.html", null ],
    [ "cnl::set_rep< Number, set_rounding_t< _impl::rep_of_t< Number >, RoundingTag > >", "structcnl_1_1set__rep.html", null ],
    [ "cnl::set_rounding< _impl::remove_cvref_t< Number >, RoundingTag >", "structcnl_1_1set__rounding.html", null ],
    [ "cnl::set_rounding< Number, RoundingTag >", "structcnl_1_1set__rounding.html", null ],
    [ "cnl::set_tag< Number, RoundingTag >", "structcnl_1_1set__tag.html", null ],
    [ "cnl::numbers::signedness< decltype(Value)>", "structcnl_1_1numbers_1_1signedness.html", null ],
    [ "cnl::numbers::signedness< Narrowest >", "structcnl_1_1numbers_1_1signedness.html", null ],
    [ "cnl::numbers::signedness< Rep >", "structcnl_1_1numbers_1_1signedness.html", null ],
    [ "cnl::numbers::signedness< Upper >", "structcnl_1_1numbers_1_1signedness.html", null ]
];